# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
       
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      infra_env:
        description: 'Run the workflow '
        required: true
        default: 'Yes/No'
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps: 
    - name: "Checkout source code"
      uses: "actions/checkout@v2"
      with:
       token: ${{secrets.PAT_TOKN}}
#       with:
#           ref: ${{ github.ref }}
          
    - name: Install dependencies
      run: npm install
           npm run build
      
    - name: nr1 install 
      run: curl -s https://cli.nr-ext.net/installer.sh | sudo bash
      
    - name: nr1 version 
      run: nr1 --version
      
    - name: nr1 authenticate
      run: nr1 profiles:add --name cloudeq-partner-sandbox --api-key NRAK-OLB64GMLY8GS69SC831T0WX2TNJ --region us
      
    - name: nr1 publish
      run: nr1 nerdpack:publish  
      
    - name: nr1 subscribe
      run: nr1 nerdpack:subscribe   
    
    
      
    - name: shell scripting 
      shell: bash
      if: always() && true
      run: |
         VERSION=$(jq -r '.version' package.json)
         IFS='.' read -ra VERSION_ARRAY <<< "$VERSION"
         MAJOR=${VERSION_ARRAY[0]}
         MINOR=${VERSION_ARRAY[1]}
         PATCH=${VERSION_ARRAY[2]}
         PATCH=$((PATCH+1))
         NEW_VERSION="$MAJOR.$MINOR.$PATCH"
         file_path="$(pwd)/package.json"
         chmod +rwx "$file_path"
         jq ".version = \"$NEW_VERSION\"" package.json > tmp.json && mv tmp.json package.json
         git config --global user.email "naveen.sharma@cloudeq.com"
         git config --global user.name "Naveen Sharma"
         
         git add .
         git commit -m "Commit message"
         git push origin master
         
         
         


         echo $VERSION
         echo $MAJOR
         echo $MINOR
         echo $PATCH
         echo $NEW_VERSION
         echo $file_path
         cat package.json
         
    
        
    
    
            
                    
                     
                    
      
      
        
        
        

          
          
          
        
    
    
      
